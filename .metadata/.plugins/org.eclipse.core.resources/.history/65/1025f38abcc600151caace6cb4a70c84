/**
 * Copyright (c) 2014 CenturyLink, Inc. All Rights Reserved.
 */
package com.centurylink.mdw.plugin.designer.wizards;

import java.io.File;

import org.eclipse.core.runtime.IStatus;
import org.eclipse.core.runtime.Status;
import org.eclipse.swt.SWT;
import org.eclipse.swt.events.ModifyEvent;
import org.eclipse.swt.events.ModifyListener;
import org.eclipse.swt.events.SelectionAdapter;
import org.eclipse.swt.events.SelectionEvent;
import org.eclipse.swt.layout.GridData;
import org.eclipse.swt.layout.GridLayout;
import org.eclipse.swt.widgets.Combo;
import org.eclipse.swt.widgets.Composite;
import org.eclipse.swt.widgets.Label;
import org.eclipse.swt.widgets.Text;

import com.centurylink.mdw.designer.testing.TestCase;
import com.centurylink.mdw.plugin.WizardPage;
import com.centurylink.mdw.plugin.designer.model.AutomatedTestCase;
import com.centurylink.mdw.plugin.designer.model.AutomatedTestSuite;
import com.centurylink.mdw.plugin.designer.model.WorkflowElement;
import com.centurylink.mdw.plugin.project.WorkflowProjectManager;
import com.centurylink.mdw.plugin.project.model.WorkflowProject;

public class NewTestCasePage extends WizardPage
{
  private Text testSuiteDirectoryText;
  private Text caseNameTextField;
  private Combo testCaseLanguageCombo;

  private TestCase testCase;

  public NewTestCasePage()
  {
    setTitle("New Test Case");
    setDescription("Enter the name and location for your test case.");
  }

  @Override
  public void drawWidgets(Composite parent)
  {
    // create the composite to hold the widgets
    Composite composite = new Composite(parent, SWT.NULL);

    // create the layout for this wizard page
    GridLayout gl = new GridLayout();
    int ncol = 3;
    gl.numColumns = ncol;
    composite.setLayout(gl);

    createWorkflowProjectControls(composite, ncol);
    createNameControls(composite, ncol);
    createLanguageControls(composite, ncol);

    setControl(composite);

    caseNameTextField.forceFocus();
  }

  protected void createWorkflowProjectControls(Composite parent, int ncol)
  {
    super.createWorkflowProjectControls(parent, ncol);
    workflowProjectCombo.addSelectionListener(new SelectionAdapter()
    {
      public void widgetSelected(SelectionEvent e)
      {
        WorkflowProject workflowProj = WorkflowProjectManager.getInstance().getWorkflowProject(workflowProjectCombo.getText());
        getTestSuite().setProject(workflowProj);
        // FIXME asset tests
        testSuiteDirectoryText.setText(getTestSuite().getProject().getOldTestCasesDir().toString());
        handleFieldChanged();
      }
    });
  }

  private void createNameControls(Composite parent, int ncol)
  {
    new Label(parent, SWT.NONE).setText("Test Case Name:");

    caseNameTextField = new Text(parent, SWT.SINGLE | SWT.BORDER);
    GridData gd = new GridData(GridData.BEGINNING);
    gd.widthHint = 300;
    gd.horizontalSpan = ncol - 1;
    caseNameTextField.setLayoutData(gd);
    caseNameTextField.addModifyListener(new ModifyListener()
      {
        public void modifyText(ModifyEvent e)
        {
          handleFieldChanged();
        }
      });
  }

  private void createLanguageControls(Composite parent, int ncol)
  {
    new Label(parent, SWT.NONE).setText("Test Case Language:");

    testCaseLanguageCombo = new Combo(parent, SWT.DROP_DOWN | SWT.READ_ONLY);
    GridData gd = new GridData(GridData.BEGINNING);
    gd.horizontalSpan = ncol - 1;
    gd.widthHint = 150;
    testCaseLanguageCombo.setLayoutData(gd);
    testCaseLanguageCombo.add(TestCase.LANGUAGE_GROOVY);
    testCaseLanguageCombo.add(TestCase.LANGUAGE_GHERKIN);
    testCaseLanguageCombo.add(TestCase.LANGUAGE_MAGIC);
    testCaseLanguageCombo.setText(TestCase.LANGUAGE_GROOVY);
    testCaseLanguageCombo.addSelectionListener(new SelectionAdapter()
    {
      public void widgetSelected(SelectionEvent e)
      {
        handleFieldChanged();
      }
    });
  }

  @Override
  public boolean isPageComplete()
  {
    return isPageValid();
  }

  boolean isPageValid()
  {
    // FIXME asset tests
    return (getProject() != null
        && checkString(getTestSuite().getProject().getOldTestCasesDir().toString())
        && checkString(getTestCase().getName()))
        && !checkDir(getTestCase().getTestCaseDirectory().toString())
        && getTestCase().getTestCaseDirectory().toString().indexOf(getProject().getProjectDir().toString()) >= 0;
  }

  public IStatus[] getStatuses()
  {
    String msg = null;
    if (getProject() == null)
      msg = "Please select a valid workflow project";
    else if (!checkString(getTestSuite().getProject().getOldTestCasesDir().toString())) // FIXME asset tests
      msg = "Please specify a test suite directory";
    else if (caseNameTextField.getText().trim().length() == 0)
      msg = "Please enter a test case name";
    else if (checkDir(getTestCase().getTestCaseDirectory().toString()))
      msg = "Test case directory already exists: " + getTestCase().getTestCaseDirectory();
    else if (getTestCase().getTestCaseDirectory().toString().indexOf(getProject().getProjectDir().toString()) == -1)
      msg = "Test case directory must be located within the selected workflow project: " + getProject().getProjectDir();

    if (msg == null)
      return null;

    IStatus[] is = {new Status(IStatus.ERROR, getPluginId(), 0, msg, null)};
    return is;
  }

  public AutomatedTestCase getTestCase()
  {
    return ((NewTestCaseWizard)getWizard()).getTestCase();
  }

  public AutomatedTestSuite getTestSuite()
  {
    return getTestCase().getTestSuite();
  }

  @Override
  public WorkflowElement getElement()
  {
    return getTestCase();
  }

  @Override
  protected void handleFieldChanged()
  {
    if (testSuiteDirectoryText != null && caseNameTextField != null && testCaseLanguageCombo != null)
    {
      if (testCase == null)
        testCase = new TestCase();
      String testCaseName = caseNameTextField.getText().trim();
      if (testCaseName.endsWith(".groovy"))
        testCaseName = testCaseName.substring(0, testCaseName.length() - 7);
      testCase.setTestCaseDir(new File(testSuiteDirectoryText.getText().trim() + "/" + testCaseName));
      testCase.setLanguage(testCaseLanguageCombo.getText());
      getTestCase().setTestCase(testCase);
    }

    super.handleFieldChanged();
  }

}