/**
 * Copyright (c) 2014 CenturyLink, Inc. All Rights Reserved.
 */
package com.centurylink.mdw.hub.ui.requests;

import java.util.HashMap;
import java.util.List;
import java.util.Map;

import com.centurylink.mdw.common.query.PaginatedResponse;
import com.centurylink.mdw.common.query.QueryRequest;
import com.centurylink.mdw.common.utilities.logger.LoggerUtil;
import com.centurylink.mdw.common.utilities.logger.StandardLogger;
import com.centurylink.mdw.services.EventManager;
import com.centurylink.mdw.taskmgr.ui.data.PagedListDataModel;
import com.centurylink.mdw.taskmgr.ui.layout.ListUI;
import com.centurylink.mdw.web.ui.filter.Filter;
import com.centurylink.mdw.web.util.RemoteLocator;

public class RequestDataModel extends PagedListDataModel {
    protected static StandardLogger logger = LoggerUtil.getStandardLogger();

    public RequestDataModel(ListUI listUI, Filter filter, List<String> dbClmns) {
        super(listUI, filter);
    }

    @Override
    public PaginatedResponse fetchPage(int pageIndex, Filter filter) {
        try {
            Map<String,String> criteriaMap = filter == null ? new HashMap<String,String>() : ((com.centurylink.mdw.taskmgr.ui.filter.Filter)filter).buildCriteriaMap();
            EventManager eventMgr = RemoteLocator.getEventManager();
            QueryRequest queryRequest = new QueryRequest();
            queryRequest.setRestrictions(criteriaMap);
            queryRequest.setOrderBy(getSortColumn());
            queryRequest.setIsAscendingOrder(isSortAscending());
            queryRequest.setPageIndex(pageIndex);
            queryRequest.setPageSize(getPageSize());
            queryRequest.setShowAllDisplayRows(getListUI().getShowAllDisplayRows());
            return eventMgr.getListenerRequests(queryRequest);
        }
        catch (Exception ex) {
            logger.severeException(ex.getMessage(), ex);
            return null;
        }
    }

}
