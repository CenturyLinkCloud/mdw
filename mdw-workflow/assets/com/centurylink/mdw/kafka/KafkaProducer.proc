{
  "activities": [
    {
      "attributes": {"WORK_DISPLAY_INFO": "x=61,y=160,w=60,h=40"},
      "id": "A1",
      "implementor": "com.centurylink.mdw.workflow.activity.process.ProcessStartActivity",
      "name": "Start",
      "transitions": [{
        "attributes": {"TRANSITION_DISPLAY_INFO": "lx=172,ly=213,type=Elbow,xs=125&178,ys=180&180"},
        "event": "FINISH",
        "id": "T1",
        "to": "A3"
      }]
    },
    {
      "attributes": {"WORK_DISPLAY_INFO": "x=590,y=156,w=60,h=40"},
      "id": "A2",
      "implementor": "com.centurylink.mdw.workflow.activity.process.ProcessFinishActivity",
      "name": "Stop"
    },
    {
      "attributes": {
        "DO_LOGGING": "true",
        "Output Documents": "[\"producerProperties\",\"recordProperties\"]",
        "PostScriptLang": "Groovy",
        "PreScript": "import org.apache.kafka.clients.producer.ProducerConfig\r\nimport org.apache.kafka.common.serialization.StringSerializer\r\n\r\nimport com.centurylink.mdw.config.PropertyUtil\r\nimport com.centurylink.mdw.kafka.KafkaAdapter\r\n\r\nProperties producerProps = new Properties();\r\n\r\n//NOTE: coma separated list of server:port ex. localhost:9092,localhost:9093\r\nString server = PropertyUtil.getInstance().getPropertyManager().getProperty(\"mdw.kafka.servers\");\r\nSystem.out.println(\"BOOTSTRAP_SERVERS_CONFIG : \" + server);\r\nproducerProps.put(ProducerConfig.BOOTSTRAP_SERVERS_CONFIG, server);\r\nproducerProps.put(ProducerConfig.CLIENT_ID_CONFIG, \"KafkaMDWProducer\");\r\nproducerProps.put(ProducerConfig.KEY_SERIALIZER_CLASS_CONFIG, StringSerializer.class.getName());\r\nproducerProps.put(ProducerConfig.VALUE_SERIALIZER_CLASS_CONFIG, StringSerializer.class.getName());\r\nproducerProps.put(\"timeout.ms\", \"100\");\r\nproducerProperties = producerProps;\r\n\nProperties recordProps = new Properties();\r\nrecordProps.put(KafkaAdapter.KAFKA_TOPIC_NAME, \"testMdwInbound\");\r\nString key = \"\" + System.currentTimeMillis();\r\nrecordProps.put(KafkaAdapter.RECORD_KEY, key);\r\nrecordProps.put(KafkaAdapter.RECORD_PARTITION,  0);\r\nrecordProperties = recordProps;\r\n\r\n//request=runtimeContext.getMasterRequestId();\r\nprintln \" [\" + request + \"]\"",
        "PreScriptLang": "Groovy",
        "ProducerRecordVariable": "recordProperties",
        "ProducerVariable": "producerProperties",
        "REQUEST_VARIABLE": "request",
        "RESPONSE_VARIABLE": "response",
        "WORK_DISPLAY_INFO": "x=182,y=150,w=169,h=65",
        "synchronous": "True"
      },
      "id": "A3",
      "implementor": "com.centurylink.mdw.kafka.KafkaAdapter",
      "name": "Publish Kafka Message",
      "transitions": [{
        "attributes": {"TRANSITION_DISPLAY_INFO": "lx=365,ly=189,type=Elbow,xs=355&389,ys=182&182"},
        "event": "FINISH",
        "id": "T2",
        "to": "A4"
      }]
    },
    {
      "attributes": {
        "STATUS_AFTER_TIMEOUT": "Cancelled",
        "WAIT_EVENT_NAMES": "[[\"KafkaMessage-${masterRequestId}\",\"\",\"\"]]",
        "WORK_DISPLAY_INFO": "x=393,y=149,w=153,h=65",
        "rcvdMsgDocVar": "rcvdKafkaMessage"
      },
      "id": "A4",
      "implementor": "com.centurylink.mdw.workflow.activity.event.EventWaitActivity",
      "name": "Receive Kafka Message\r\n Event Wait Activity",
      "transitions": [{
        "attributes": {"TRANSITION_DISPLAY_INFO": "lx=568,ly=176,type=Elbow,xs=550&586,ys=176&176"},
        "event": "FINISH",
        "id": "T3",
        "to": "A2"
      }]
    }
  ],
  "attributes": {
    "ArrowStyle": "ArrowEnd",
    "NodeStyle": "BoxIcon",
    "PROCESS_VISIBILITY": "PUBLIC",
    "WORK_DISPLAY_INFO": "x=50,y=50,w=133,h=27"
  },
  "variables": {
    "producerProperties": {
      "category": "LOCAL",
      "type": "java.lang.Object"
    },
    "rcvdKafkaMessage": {
      "category": "OUTPUT",
      "type": "org.apache.xmlbeans.XmlObject"
    },
    "recordProperties": {
      "category": "LOCAL",
      "type": "java.lang.Object"
    },
    "request": {
      "category": "INPUT",
      "type": "java.lang.String"
    },
    "response": {
      "category": "OUTPUT",
      "type": "java.lang.String"
    }
  }
}