{
  "activities": [
    {
      "attributes": {"WORK_DISPLAY_INFO": "x=57,y=78,w=60,h=40"},
      "id": "A1",
      "implementor": "com.centurylink.mdw.workflow.activity.process.ProcessStartActivity",
      "name": "Start",
      "transitions": [{
        "attributes": {"TRANSITION_DISPLAY_INFO": "lx=173,ly=98,type=Elbow,xs=121&224,ys=98&98"},
        "event": "FINISH",
        "id": "T1",
        "to": "A5"
      }]
    },
    {
      "attributes": {
        "ClassName": "SimpleDynamicJava_A5",
        "Java": "package com.centurylink.mdw.tests.cloud;\n\nimport java.text.SimpleDateFormat;\nimport java.util.Map;\n\nimport javax.xml.parsers.DocumentBuilder;\nimport javax.xml.parsers.DocumentBuilderFactory;\n\nimport org.apache.xmlbeans.XmlObject;\nimport org.w3c.dom.Document;\nimport org.w3c.dom.Element;\n\nimport com.centurylink.mdw.java.JavaExecutionException;\nimport com.centurylink.mdw.java.JavaExecutor;\nimport com.centurylink.mdw.java.MdwJavaException;\nimport com.centurylink.mdw.model.workflow.ActivityRuntimeContext;\nimport com.centurylink.mdw.service.Action;\nimport com.centurylink.mdw.service.ActionRequestDocument;\nimport com.centurylink.mdw.service.Parameter;\n\npublic class SimpleDynamicJava_A5 implements JavaExecutor\n{\n  ActivityRuntimeContext context;\n  private String logicalId;\n\n  public void initialize(ActivityRuntimeContext context) throws MdwJavaException\n  {\n    this.context = context;\n    logicalId = context.getAttributes().get(\"LOGICAL_ID\");\n  }\n\n  public Object execute(Map<String, Object> variables) throws JavaExecutionException\n  {\n    context.logInfo(\"logical id: \" + logicalId);\n\n    XmlObject xmlBean = (XmlObject) variables.get(\"instructions\");\n    ActionRequestDocument actionRequestDoc = (ActionRequestDocument) xmlBean.changeType(ActionRequestDocument.type);\n    if (actionRequestDoc == null)\n      throw new JavaExecutionException(\"Missing actionRequestDoc variable: instructions\");\n    variables.put(\"instructions\", actionRequestDoc);\n    Action action = actionRequestDoc.getActionRequest().getAction();\n    if (action.getName().equals(\"acknowledge\"))\n    {\n      // access dynamic java class\n      String ackOutcome = new Acknowledger().acknowledge();\n      variables.put(\"outcome\", ackOutcome);\n    }\n    else if (action.getName().equals(\"escalate\"))\n    {\n      context.logSevere(\"ESCALATING... \");\n      variables.put(\"outcome\", \"Escalation\");\n      String message = \"Escalatation required.\";\n      for (Parameter parameter : action.getParameterList())\n      {\n        if (parameter.getName().equals(\"orderNumber\"))\n          message += \"\\nOrder Number: \" + parameter.getStringValue();\n        else if (parameter.getName().equals(\"customerId\"))\n          message += \"\\nCustomer ID: \" + parameter.getStringValue();\n        else if (parameter.getName().equals(\"contactTn\"))\n          message += \"\\nContact TN: \" + parameter.getStringValue();\n      }\n      variables.put(\"userMessage\", message);\n    }\n\n    try\n    {\n      DocumentBuilder builder = DocumentBuilderFactory.newInstance().newDocumentBuilder();\n      Document document = builder.newDocument();\n      Element root = document.createElement(\"dispensation\");\n      document.appendChild(root);\n      root.setAttribute(\"outcome\", variables.get(\"outcome\").toString());\n      variables.put(\"dispensation\", document);\n\n      variables.put(\"completionDate\", new SimpleDateFormat(\"MM/dd/yyyy\").parse(\"12/25/2015\"));\n    }\n    catch (Exception ex)\n    {\n      throw new JavaExecutionException(\"Bad date format.\");\n    }\n    return variables.get(\"outcome\");\n  }\n}\n",
        "Output Documents": "dispensation",
        "WORK_DISPLAY_INFO": "x=228,y=69,w=113,h=72"
      },
      "id": "A5",
      "implementor": "com.centurylink.mdw.workflow.activity.java.DynamicJavaActivity",
      "name": "Perform Critical\r\nBusiness Function",
      "transitions": [
        {
          "attributes": {"TRANSITION_DISPLAY_INFO": "lx=291,ly=180,type=Elbow,xs=285&285,ys=145&243"},
          "event": "FINISH",
          "id": "T2",
          "resultCode": "Escalation",
          "to": "A4"
        },
        {
          "attributes": {"TRANSITION_DISPLAY_INFO": "lx=391,ly=103,type=Elbow,xs=345&520,ys=101&101"},
          "event": "FINISH",
          "id": "T3",
          "resultCode": "Acknowledgment",
          "to": "A2"
        }
      ]
    },
    {
      "attributes": {"WORK_DISPLAY_INFO": "x=255,y=247,w=60,h=40"},
      "id": "A4",
      "implementor": "com.centurylink.mdw.workflow.activity.process.ProcessFinishActivity",
      "name": "Stop"
    },
    {
      "attributes": {
        "DoNotNotifyCaller": "false",
        "WORK_DISPLAY_INFO": "x=524,y=81,w=60,h=40"
      },
      "id": "A2",
      "implementor": "com.centurylink.mdw.workflow.activity.process.ProcessFinishActivity",
      "name": "Stop"
    }
  ],
  "attributes": {
    "ArrowStyle": "ArrowEnd",
    "NodeStyle": "BoxIcon",
    "PROCESS_VISIBILITY": "PUBLIC",
    "START_TRANSITION_ID": "2360515",
    "WORK_DISPLAY_INFO": "x=25,y=16,w=183,h=27"
  },
  "variables": {
    "completionDate": {
      "category": "LOCAL",
      "type": "java.util.Date"
    },
    "dispensation": {
      "category": "LOCAL",
      "type": "org.w3c.dom.Document"
    },
    "instructions": {
      "category": "INPUT",
      "type": "org.apache.xmlbeans.XmlObject"
    },
    "outcome": {
      "category": "LOCAL",
      "type": "java.lang.String"
    },
    "responsibleParty": {
      "category": "INPUT",
      "type": "java.lang.String"
    },
    "userMessage": {
      "category": "LOCAL",
      "type": "java.lang.String"
    }
  }
}