activities:
- id: A1
  name: Start
  implementor: com.centurylink.mdw.workflow.activity.process.ProcessStartActivity
  attributes:
    WORK_DISPLAY_INFO: x=32,y=129,w=60,h=40
  transitions:
  - id: T1
    to: A5
    event: FINISH
    attributes:
      TRANSITION_DISPLAY_INFO: lx=123,ly=149,type=Elbow,xs=95&152,ys=149&149
- id: A2
  name: Stop
  implementor: com.centurylink.mdw.workflow.activity.process.ProcessFinishActivity
  attributes:
    WORK_DISPLAY_INFO: x=494,y=299,w=60,h=40
- id: A4
  name: "Create\r\nServicePlan"
  implementor: com.centurylink.mdw.kotlin.ScriptActivity
  attributes:
    Output Documents: '["servicePlan"]'
    Rule: "import com.centurylink.mdw.tests.microservice.ServicePlanTest\r\n\r\nval servicePlanTest = ServicePlanTest()\r\n\r\nwhen (variables[\"testCase\"]) {\r\n  \"defaultBindings\" -> {\r\n    variables[\"servicePlan\"] = servicePlanTest.defaultBindings()\r\n  }\r\n  \"customBindings\" -> {\r\n    variables[\"servicePlan\"] = servicePlanTest.customBindings()\r\n  }\r\n}"
    SCRIPT: Kotlin Script
    WORK_DISPLAY_INFO: x=322,y=118,w=105,h=71
  transitions:
  - id: T2
    to: A2
    event: FINISH
    attributes:
      TRANSITION_DISPLAY_INFO: lx=478,ly=224,type=Elbow,xs=431&525,ys=153&295
- id: A5
  name: Which?
  implementor: com.centurylink.mdw.workflow.activity.script.ScriptEvaluator
  attributes:
    Expression: variables["language"]
    SCRIPT: Kotlin Script
    WORK_DISPLAY_INFO: x=156,y=122,w=85,h=55
  transitions:
  - id: T3
    to: A4
    event: FINISH
    resultCode: Kotlin
    attributes:
      TRANSITION_DISPLAY_INFO: lx=264,ly=156,type=Elbow,xs=245&318,ys=148&148
  - id: T4
    to: A6
    event: FINISH
    resultCode: Java
    attributes:
      TRANSITION_DISPLAY_INFO: lx=207,ly=230,type=Elbow,xs=198&198,ys=181&273
- id: A6
  name: |-
    Java
    ServicePlan
  implementor: com.centurylink.mdw.workflow.activity.java.DynamicJavaActivity
  attributes:
    ClassName: ServicePlanTest_A6
    Java: "package com.centurylink.mdw.tests.microservice;\n\nimport java.util.ArrayList;\nimport java.util.HashMap;\nimport java.util.List;\nimport java.util.Map;\n\nimport com.centurylink.mdw.java.JavaExecutionException;\nimport com.centurylink.mdw.java.JavaExecutor;\nimport com.centurylink.mdw.java.MdwJavaException;\nimport com.centurylink.mdw.microservice.ServicePlan;\nimport com.centurylink.mdw.model.workflow.ActivityRuntimeContext;\nimport com.centurylink.mdw.microservice.Microservice;\n\npublic class ServicePlanTest_A6 implements JavaExecutor {\n    private ActivityRuntimeContext context;\n\n    public void initialize(ActivityRuntimeContext context) throws MdwJavaException {\n        this.context = context;\n    }\n\n    public Object execute(Map<String,Object> variables) throws JavaExecutionException  {\n        \n        Map<String,Object> bindings = new HashMap<>();\n        bindings.put(\"greeting\", \"hello\");\n        bindings.put(\"requestMapper\", \"com.centurylink.mdw.tests.microservice/UserRequestMapper.groovy\");\n        bindings.put(\"intVar\", 123);\n        \n        Microservice microservice = new Microservice(\n                context,\n                \"admin/createUser\",\n                context.getProps().get(\"mdw.services.url\") + \"/services/Users\",\n                \"POST\",\n                \"com.centurylink.mdw.microservice/${StandardInvoke}.proc\",\n                true,\n                1,\n                true,\n                \"\",\n                bindings\n        );\n\n        List<Microservice> microservices = new ArrayList<>();\n        microservices.add(microservice);\n        ServicePlan servicePlan = new ServicePlan(microservices);\n        variables.put(\"servicePlan\", servicePlan);\n                \n        return null;\n    }\n}\n"
    Output Documents: '["servicePlan"]'
    WORK_DISPLAY_INFO: x=145,y=277,w=106,h=68
  transitions:
  - id: T5
    to: A2
    event: FINISH
    attributes:
      TRANSITION_DISPLAY_INFO: lx=372,ly=319,type=Elbow,xs=255&490,ys=319&319
variables:
  language:
    type: java.lang.String
    category: INPUT
  request:
    type: com.centurylink.mdw.model.Jsonable
    category: INPUT
  servicePlan:
    type: org.yaml.snakeyaml.Yaml
    category: LOCAL
  testCase:
    type: java.lang.String
    category: INPUT
attributes:
  ArrowStyle: ArrowEnd
  NodeStyle: BoxIcon
  PROCESS_VISIBILITY: PUBLIC
  WORK_DISPLAY_INFO: x=40,y=39,w=151,h=26
textNotes:
- id: N3
  content: Just tests the DSL
  attributes:
    WORK_DISPLAY_INFO: x=232,y=45,w=149,h=22
