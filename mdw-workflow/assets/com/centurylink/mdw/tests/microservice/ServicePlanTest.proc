{
  "activities": [
    {
      "attributes": {"WORK_DISPLAY_INFO": "x=32,y=129,w=60,h=40"},
      "id": "A1",
      "implementor": "com.centurylink.mdw.workflow.activity.process.ProcessStartActivity",
      "name": "Start",
      "transitions": [{
        "attributes": {"TRANSITION_DISPLAY_INFO": "lx=123,ly=149,type=Elbow,xs=95&152,ys=149&149"},
        "event": "FINISH",
        "id": "T1",
        "to": "A5"
      }]
    },
    {
      "attributes": {"WORK_DISPLAY_INFO": "x=494,y=299,w=60,h=40"},
      "id": "A2",
      "implementor": "com.centurylink.mdw.workflow.activity.process.ProcessFinishActivity",
      "name": "Stop"
    },
    {
      "attributes": {
        "Output Documents": "[\"servicePlan\"]",
        "Rule": "import com.centurylink.mdw.tests.microservice.ServicePlanTest\r\n\r\nval servicePlanTest = ServicePlanTest()\r\n\r\nwhen (variables[\"testCase\"]) {\r\n  \"defaultBindings\" -> {\r\n    variables[\"servicePlan\"] = servicePlanTest.defaultBindings()\r\n  }\r\n  \"customBindings\" -> {\r\n    variables[\"servicePlan\"] = servicePlanTest.customBindings()\r\n  }\r\n}",
        "SCRIPT": "Kotlin Script",
        "WORK_DISPLAY_INFO": "x=322,y=118,w=105,h=71"
      },
      "id": "A4",
      "implementor": "com.centurylink.mdw.kotlin.ScriptActivity",
      "name": "Create\r\nServicePlan",
      "transitions": [{
        "attributes": {"TRANSITION_DISPLAY_INFO": "lx=478,ly=224,type=Elbow,xs=431&525,ys=153&295"},
        "event": "FINISH",
        "id": "T2",
        "to": "A2"
      }]
    },
    {
      "attributes": {
        "Expression": "variables[\"language\"]",
        "SCRIPT": "Kotlin Script",
        "WORK_DISPLAY_INFO": "x=156,y=122,w=85,h=55"
      },
      "id": "A5",
      "implementor": "com.centurylink.mdw.workflow.activity.script.ScriptEvaluator",
      "name": "Which?",
      "transitions": [
        {
          "attributes": {"TRANSITION_DISPLAY_INFO": "lx=264,ly=156,type=Elbow,xs=245&318,ys=148&148"},
          "event": "FINISH",
          "id": "T3",
          "resultCode": "Kotlin",
          "to": "A4"
        },
        {
          "attributes": {"TRANSITION_DISPLAY_INFO": "lx=207,ly=230,type=Elbow,xs=198&198,ys=181&273"},
          "event": "FINISH",
          "id": "T4",
          "resultCode": "Java",
          "to": "A6"
        }
      ]
    },
    {
      "attributes": {
        "ClassName": "ServicePlanTest_A6",
        "Java": "package com.centurylink.mdw.tests.microservice;\n\nimport java.util.ArrayList;\nimport java.util.HashMap;\nimport java.util.List;\nimport java.util.Map;\n\nimport com.centurylink.mdw.java.JavaExecutionException;\nimport com.centurylink.mdw.java.JavaExecutor;\nimport com.centurylink.mdw.java.MdwJavaException;\nimport com.centurylink.mdw.microservice.ServicePlan;\nimport com.centurylink.mdw.model.workflow.ActivityRuntimeContext;\nimport com.centurylink.mdw.microservice.Microservice;\n\npublic class ServicePlanTest_A6 implements JavaExecutor {\n    private ActivityRuntimeContext context;\n\n    public void initialize(ActivityRuntimeContext context) throws MdwJavaException {\n        this.context = context;\n    }\n\n    public Object execute(Map<String,Object> variables) throws JavaExecutionException  {\n        \n        Map<String,Object> bindings = new HashMap<>();\n        bindings.put(\"greeting\", \"hello\");\n        bindings.put(\"requestMapper\", \"com.centurylink.mdw.tests.microservice/UserRequestMapper.groovy\");\n        bindings.put(\"intVar\", 123);\n        \n        Microservice microservice = new Microservice(\n                context,\n                \"admin/createUser\",\n                context.getProps().get(\"mdw.services.url\") + \"/services/Users\",\n                \"POST\",\n                \"com.centurylink.mdw.microservice/${StandardInvoke}.proc\",\n                true,\n                1,\n                true,\n                bindings\n        );\n\n        List<Microservice> microservices = new ArrayList<>();\n        microservices.add(microservice);\n        ServicePlan servicePlan = new ServicePlan(microservices);\n        variables.put(\"servicePlan\", servicePlan);\n                \n        return null;\n    }\n}\n",
        "Output Documents": "[\"servicePlan\"]",
        "WORK_DISPLAY_INFO": "x=145,y=277,w=106,h=68"
      },
      "id": "A6",
      "implementor": "com.centurylink.mdw.workflow.activity.java.DynamicJavaActivity",
      "name": "Java\nServicePlan",
      "transitions": [{
        "attributes": {"TRANSITION_DISPLAY_INFO": "lx=372,ly=319,type=Elbow,xs=255&490,ys=319&319"},
        "event": "FINISH",
        "id": "T5",
        "to": "A2"
      }]
    }
  ],
  "attributes": {
    "ArrowStyle": "ArrowEnd",
    "NodeStyle": "BoxIcon",
    "PROCESS_VISIBILITY": "PUBLIC",
    "WORK_DISPLAY_INFO": "x=40,y=39,w=151,h=26"
  },
  "textNotes": [{
    "attributes": {"WORK_DISPLAY_INFO": "x=232,y=45,w=149,h=22"},
    "content": "Just tests the DSL",
    "id": "N3"
  }],
  "variables": {
    "language": {
      "category": "INPUT",
      "type": "java.lang.String"
    },
    "request": {
      "category": "INPUT",
      "type": "com.centurylink.mdw.model.Jsonable"
    },
    "servicePlan": {
      "category": "LOCAL",
      "type": "org.yaml.snakeyaml.Yaml"
    },
    "testCase": {
      "category": "INPUT",
      "type": "java.lang.String"
    }
  }
}