<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
  xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
  xmlns:osgi="http://www.springframework.org/schema/osgi"
  xsi:schemaLocation="http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans-2.5.xsd
                      http://www.springframework.org/schema/osgi http://www.springframework.org/schema/osgi/spring-osgi-1.0.xsd">

  <bean id="mdwActivityProviderService" class="com.centurylink.mdw.workflow.provider.ActivityProviderBean" />
  <osgi:service ref="mdwActivityProviderService">
    <osgi:interfaces>
      <value>com.centurylink.mdw.common.provider.ActivityProvider</value>
    </osgi:interfaces>
    <osgi:service-properties>
      <entry key="alias" value="mdwActivities"/>
    </osgi:service-properties>    
  </osgi:service>

  <bean id="mdwVariableTranslatorProvider"
    class="com.centurylink.mdw.workflow.provider.VariableTranslatorProviderBean" />  
  <osgi:service ref="mdwVariableTranslatorProvider">
    <osgi:interfaces>
      <value>com.centurylink.mdw.common.provider.VariableTranslatorProvider</value>
    </osgi:interfaces>
    <osgi:service-properties>
      <entry key="alias" value="mdwVariableTranslators"/>
    </osgi:service-properties>
  </osgi:service>

  <!-- dynamic java activity is injected to support bundle access -->
  <bean id="dynamicJavaActivity" class="com.centurylink.mdw.workflow.activity.java.DynamicJavaActivity" scope="prototype" />
     
  <bean id="DroolsKnowledgeBaseCache" class="com.centurylink.mdw.workflow.drools.cache.DroolsKnowledgeBaseCache" />
  <osgi:service ref="DroolsKnowledgeBaseCache">
    <osgi:interfaces>
      <value>com.centurylink.mdw.common.provider.CacheService</value>
    </osgi:interfaces>
    <osgi:service-properties>
      <entry key="alias" value="DroolsKnowledgeBaseCache"/>
      <!-- 
      <entry key="PreLoaded" value="orderRoutingDecisionTable&#10;multiSheetDecisionTable~EastWest&#10;orderRoutingRules{Certified=true,Code=Secret Value}" />
       -->
    </osgi:service-properties>    
  </osgi:service>
  
  <bean id="jaxbTranslator" class="com.centurylink.mdw.jaxb.JaxbElementTranslator">
    <property name="marshaller" ref="marshaller" />
    <property name="unmarshaller" ref="unmarshaller" />
  </bean>
      
  <!-- JAXB context needs to be configured with specific classes as follows -->
  <bean id="jaxbContext" class="javax.xml.bind.JAXBContext" factory-method="newInstance">
    <constructor-arg>
      <list>
        <value type="java.lang.Class">com.centurylink.mdw.common.service.types.ResourceRequest</value>
        <value type="java.lang.Class">com.centurylink.mdw.common.service.types.ActionRequest</value>
        <value type="java.lang.Class">com.centurylink.mdw.common.service.types.Status</value>
        <value type="java.lang.Class">com.centurylink.mdw.common.service.types.Error</value>
        <value type="java.lang.Class">com.centurylink.mdw.common.service.types.Task</value>
        <value type="java.lang.Class">com.centurylink.mdw.common.service.types.TaskAction</value>
        <value type="java.lang.Class">com.centurylink.mdw.common.task.SubTask</value>
        <value type="java.lang.Class">com.centurylink.mdw.common.task.SubTaskPlan</value>
      </list>
    </constructor-arg>
  </bean>

  <!-- pool JAXB marshallers to improve performance -->
  <bean id="marshallerTarget" class="javax.xml.bind.Marshaller"
    factory-bean="jaxbContext" factory-method="createMarshaller" scope="prototype">
  </bean>
  <bean id="unmarshallerTarget" class="javax.xml.bind.Unmarshaller"
    factory-bean="jaxbContext" factory-method="createUnmarshaller" scope="prototype">
  </bean>
  
  <bean id="marshallerPoolTargetSource" class="org.springframework.aop.target.CommonsPoolTargetSource">
    <property name="targetBeanName" value="marshallerTarget" />
    <property name="maxSize" value="5" />
  </bean>
  <bean id="unmarshallerPoolTargetSource" class="org.springframework.aop.target.CommonsPoolTargetSource">
    <property name="targetBeanName" value="unmarshallerTarget" />
    <property name="maxSize" value="5" />
  </bean>
  
  <bean id="marshaller" class="org.springframework.aop.framework.ProxyFactoryBean">
    <property name="targetSource" ref="marshallerPoolTargetSource" />
  </bean>
  <bean id="unmarshaller" class="org.springframework.aop.framework.ProxyFactoryBean">
    <property name="targetSource" ref="unmarshallerPoolTargetSource" />
  </bean>

  <!-- Task Notifier Provider Registration -->
  <bean id="taskEmailNotifier" class="com.centurylink.mdw.workflow.task.notifier.TaskEmailNotifier" />
  <osgi:service ref="taskEmailNotifier">
    <osgi:interfaces>
      <value>com.centurylink.mdw.observer.task.TaskNotifier</value>
    </osgi:interfaces>
  </osgi:service>
  <bean id="taskIndicesNotifier" class="com.centurylink.mdw.workflow.task.notifier.TaskIndicesNotifier" />
  <osgi:service ref="taskIndicesNotifier">
    <osgi:interfaces>
      <value>com.centurylink.mdw.observer.task.TaskNotifier</value>
    </osgi:interfaces>
  </osgi:service>
  <!-- Task Strategy Provider Registration -->
  <bean id="specifiedPriorityStrategy" class="com.centurylink.mdw.workflow.task.strategy.SpecifiedPrioritizationStrategy" />
  <osgi:service ref="specifiedPriorityStrategy">
    <osgi:interfaces>
      <value>com.centurylink.mdw.observer.task.PrioritizationStrategy</value>
    </osgi:interfaces>
  </osgi:service>
  <bean id="rulesBasedPriorityStrategy" class="com.centurylink.mdw.workflow.task.strategy.RulesBasedPrioritizationStrategy" />
  <osgi:service ref="rulesBasedPriorityStrategy">
    <osgi:interfaces>
      <value>com.centurylink.mdw.observer.task.PrioritizationStrategy</value>
    </osgi:interfaces>
  </osgi:service>
  <bean id="rulesBasedRoutingStrategy" class="com.centurylink.mdw.workflow.task.strategy.RulesBasedRoutingStrategy" />
  <osgi:service ref="rulesBasedRoutingStrategy">
    <osgi:interfaces>
      <value>com.centurylink.mdw.observer.task.RoutingStrategy</value>
    </osgi:interfaces>
  </osgi:service>
  <bean id="roundRobinAutoAssignStrategy" class="com.centurylink.mdw.workflow.task.strategy.RoundRobinAutoAssignStrategy" />
  <osgi:service ref="roundRobinAutoAssignStrategy">
    <osgi:interfaces>
      <value>com.centurylink.mdw.observer.task.AutoAssignStrategy</value>
    </osgi:interfaces>
  </osgi:service>
  <bean id="shortestQueueAutoAssignStrategy" class="com.centurylink.mdw.workflow.task.strategy.ShortestQueueAutoAssignStrategy" />
  <osgi:service ref="shortestQueueAutoAssignStrategy">
    <osgi:interfaces>
      <value>com.centurylink.mdw.observer.task.AutoAssignStrategy</value>
    </osgi:interfaces>
  </osgi:service>
  <bean id="processVariableAutoAssignStrategy" class="com.centurylink.mdw.workflow.task.strategy.ProcessVariableAutoAssignStrategy" />
  <osgi:service ref="processVariableAutoAssignStrategy">
    <osgi:interfaces>
      <value>com.centurylink.mdw.observer.task.AutoAssignStrategy</value>
    </osgi:interfaces>
  </osgi:service>
  <bean id="rulesBasedSubTaskStrategy" class="com.centurylink.mdw.workflow.task.strategy.RulesBasedSubTaskStrategy" />
  <osgi:service ref="rulesBasedSubTaskStrategy">
    <osgi:interfaces>
      <value>com.centurylink.mdw.observer.task.SubTaskStrategy</value>
    </osgi:interfaces>
  </osgi:service>
  <bean id="rulesBasedAutoAssignStrategy" class="com.centurylink.mdw.workflow.task.strategy.RulesBasedAutoAssignStrategy" />
  <osgi:service ref="rulesBasedAutoAssignStrategy">
    <osgi:interfaces>
      <value>com.centurylink.mdw.observer.task.AutoAssignStrategy</value>
    </osgi:interfaces>
  </osgi:service>
  
  <!-- Example scheduled job registration
  <bean id="myScheduledJob" class="com.centurylink.mdw.myworkflow.MyScheduledJob" />
  <osgi:service ref="myScheduledJob">
    <osgi:interfaces>
      <value>com.centurylink.mdw.model.data.monitor.ScheduledJob</value>
    </osgi:interfaces>
  </osgi:service>
   -->
</beans>
