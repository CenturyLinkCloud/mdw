<?xml version="1.0" encoding="UTF-8"?>
<!-- spring config file for MDW wars deployed in tomcat -->
<beans
  xmlns="http://www.springframework.org/schema/beans"
  xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
  xmlns:ctx="http://www.springframework.org/schema/context"
  xmlns:amq="http://activemq.apache.org/schema/core"
  xsi:schemaLocation="http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans-3.0.xsd
                      http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context.xsd
                      http://activemq.apache.org/schema/core http://activemq.apache.org/schema/core/activemq-core.xsd">

  <!-- The assumption is that the mdw.properties file is used on Tomcat as well as the system property 
    mdw.config.location -->
  <!-- ctx:property-placeholder location="classpath:mdw.properties" /-->
  <!-- Note this id must match the id in the code -->
   <bean
    id="MDWDataSource"
    class="org.apache.commons.dbcp.BasicDataSource"
    destroy-method="close">
    <property
      name="driverClassName"
      value="#{T(com.centurylink.mdw.config.PropertyManager).getProperty('mdw.database.driver')}" />
    <property
      name="url"
      value="#{T(com.centurylink.mdw.config.PropertyManager).getProperty('mdw.database.url')}" />
    <property
      name="username"
      value="#{T(com.centurylink.mdw.config.PropertyManager).getProperty('mdw.database.username')}" />
    <property
      name="password"
      value="#{T(com.centurylink.mdw.config.PropertyManager).getProperty('mdw.database.password')}" />
    <property
      name="maxActive"
      value="#{T(com.centurylink.mdw.config.PropertyManager).getIntegerProperty('mdw.database.poolsize',5)}" />
    <property
      name="maxIdle"
      value="#{T(com.centurylink.mdw.config.PropertyManager).getIntegerProperty('mdw.database.poolMaxIdle',5)}" />
    <property
      name="validationQuery"
      value="#{T(com.centurylink.mdw.config.PropertyManager).getProperty('mdw.database.validationQuery')}" />
    <property
      name="testOnBorrow"
      value="true" />
    <property
      name="testWhileIdle"
      value="true" />
    <property
      name="removeAbandoned"
      value="true" />
    <property
      name="logAbandoned"
      value="true" />
    <property
      name="removeAbandonedTimeout"
      value="600" />
  </bean>

  <bean id="exporter" class="org.springframework.jmx.export.MBeanExporter" lazy-init="false">
    <property name="beans">
      <map>
        <entry key="com.centurylink.mdw:name=MDWDataSource" value-ref="MDWDataSource"/>
      </map>
    </property>
    <property name="registrationBehaviorName" value="REGISTRATION_REPLACE_EXISTING"/>
  </bean>

  <!-- Baseline Data -->
  <bean
    id="mdwBaselineData"
    class="com.centurylink.mdw.dataaccess.file.MdwBaselineData" />

  <!-- jaxb marshaller/unmarshaller pooling -->
  <bean
    id="jaxbTranslator"
    class="com.centurylink.mdw.jaxb.JaxbElementTranslator">
    <property
      name="marshaller"
      ref="marshaller" />
    <property
      name="unmarshaller"
      ref="unmarshaller" />
  </bean>

  <!-- JAXB context needs to be configured with specific classes as follows -->
  <bean
    id="jaxbContext"
    class="javax.xml.bind.JAXBContext"
    factory-method="newInstance">
    <constructor-arg>
      <list>
        <value type="java.lang.Class">com.centurylink.mdw.common.service.types.ResourceRequest</value>
        <value type="java.lang.Class">com.centurylink.mdw.common.service.types.ActionRequest</value>
        <value type="java.lang.Class">com.centurylink.mdw.common.service.types.Status</value>
        <value type="java.lang.Class">com.centurylink.mdw.common.service.types.Error</value>
        <value type="java.lang.Class">com.centurylink.mdw.common.service.types.Task</value>
        <value type="java.lang.Class">com.centurylink.mdw.common.service.types.TaskAction</value>
        <value type="java.lang.Class">com.centurylink.mdw.task.types.SubTask</value>
        <value type="java.lang.Class">com.centurylink.mdw.task.types.SubTaskPlan</value>
      </list>
    </constructor-arg>
  </bean>

  <!-- pool JAXB marshallers to improve performance -->
  <bean
    id="marshallerTarget"
    class="javax.xml.bind.Marshaller"
    factory-bean="jaxbContext"
    factory-method="createMarshaller"
    scope="prototype">
  </bean>
  <bean
    id="unmarshallerTarget"
    class="javax.xml.bind.Unmarshaller"
    factory-bean="jaxbContext"
    factory-method="createUnmarshaller"
    scope="prototype">
  </bean>

  <bean
    id="marshallerPoolTargetSource"
    class="org.springframework.aop.target.CommonsPoolTargetSource">
    <property
      name="targetBeanName"
      value="marshallerTarget" />
    <property
      name="maxSize"
      value="5" />
  </bean>
  <bean
    id="unmarshallerPoolTargetSource"
    class="org.springframework.aop.target.CommonsPoolTargetSource">
    <property
      name="targetBeanName"
      value="unmarshallerTarget" />
    <property
      name="maxSize"
      value="5" />
  </bean>

  <bean
    id="marshaller"
    class="org.springframework.aop.framework.ProxyFactoryBean">
    <property
      name="targetSource"
      ref="marshallerPoolTargetSource" />
  </bean>
  <bean
    id="unmarshaller"
    class="org.springframework.aop.framework.ProxyFactoryBean">
    <property
      name="targetSource"
      ref="unmarshallerPoolTargetSource" />
  </bean>

  <!-- JMS stuff below -->
  
  <!-- Support Spring annotations -->
  <ctx:annotation-config />
  
  <!-- New provider -->
  <bean
    id="jmsProvider"
    class="com.centurylink.mdw.container.plugin.activemq.ActiveMqJms">
  </bean> 
  
  <!-- Inject the new provider into the Application Context -->
  <bean
    id="appContext"
    class="com.centurylink.mdw.app.ApplicationContext">
    <property
      name="jmsProvider"
      ref="jmsProvider" />
  </bean>  
  
  <!-- Define broker service declaratively -->
  <amq:broker 
    id="mdw-activemq"
    brokerName="mdw-activemq"
    useJmx="true"
    schedulerSupport="true"
    useShutdownHook="true"
    dataDirectory="../activemq-data">
    <amq:transportConnectors>
      <amq:transportConnector name="tcpConnector" uri="tcp://0.0.0.0:61618?daemon=true" />
    </amq:transportConnectors>
  </amq:broker>
    
  <!-- connection factory for vm transport -->
  <bean
    id="localConnectionFactory" class="org.apache.activemq.ActiveMQConnectionFactory">
    <!-- for ServiceMix add ?marshal=true due to https://issues.apache.org/jira/browse/AMQ-3488 -->
    <property
      name="brokerURL" value="vm://mdw-activemq" />
  </bean>  
  
  <!-- pooled vm connection factory -->
  <bean id="pooledConnectionFactory" class="org.apache.activemq.pool.PooledConnectionFactory" destroy-method="stop">
    <property name="maxConnections" value="8" />
    <property name="connectionFactory" ref="localConnectionFactory" />
  </bean>  
  
</beans>
