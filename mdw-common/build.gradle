eclipse {
    wtp {
        facet {
            facet type: "fixed", name: "jst.utility"
            facet name: "jst.utility", version: "1.0"
        }
    }
}

sourceSets {
    main {
        resources {
            srcDirs "../mdw/classes"
        }
    }
}

configurations {
    cli
    compile.extendsFrom(cli)
}
 
dependencies {

    cli group: "com.beust", name: "jcommander", version: "1.72"
    cli group: "org.json", name: "json", version: "20160810"

    // TODO: remove all dependencies on mdw-schemas
    compile files("../mdw/classes");
    
    compile group: "org.apache.xmlbeans", name: "xmlbeans", version: "2.4.0"
    compile group: "javax.el", name: "el-api", version: "1.0"
    compile group: "javax.jms", name: "javax.jms-api", version: "2.0.1"
    compile group: "javax.mail", name: "mail", version: "1.4.5"
    compile group: "javax.transaction", name: "jta", version: "1.1"
    compile group: "javax.ws.rs", name: "jsr311-api", version: "1.1.1"
    compile group: "org.springframework", name: "spring-beans", version: springVersion
    compile group: "org.springframework", name: "spring-context", version: springVersion
    compile group: "org.springframework", name: "spring-core", version: springVersion
    compile group: "org.springframework", name: "spring-expression", version: springVersion
    compile group: "org.springframework", name: "spring-jms", version: springVersion
    compile group: "org.springframework", name: "spring-aop", version: springVersion
    compile group: "aopalliance", name: "aopalliance", version: "1.0"
    compile group: "org.codehaus.groovy", name: "groovy-all", version: "2.4.10"
    compile group: "org.apache.activemq", name: "activemq-all", version: "5.10.0"
    compile group: "org.apache.poi", name: "poi", version: "3.15"
    compile group: "org.apache.poi", name: "poi-ooxml", version: "3.15"
    compile group: "org.apache.httpcomponents", name: "httpclient", version: "4.5.3"
    compile group: "commons-beanutils", name: "commons-beanutils", version: "1.8.3"
    compile group: "commons-codec", name: "commons-codec", version: "1.3"
    compile group: "commons-lang", name: "commons-lang", version: "2.4"
    compile group: "commons-logging", name: "commons-logging", version: "1.1.1"
    compile group: "commons-jexl", name: "commons-jexl", version: "1.1"
    compile(group: "log4j", name: "log4j", version: "1.2.15") { exclude(module: "jmxtools"); exclude(module: "jmxri"); exclude(module: "jms") }
    compile group: "junit", name: "junit", version: "4.8.1"
    compile group: "org.eclipse.jgit", name: "org.eclipse.jgit", version: "3.4.1.201406201815-r"
    compile group: "com.jcraft", name: "jsch", version: "0.1.51" // for jgit
    compile group: "dom4j", name: "dom4j", version: "1.6.1"
    compile group: "org.mariadb.jdbc", name: "mariadb-java-client", version: "1.2.2"
    compile group: "el-impl", name: "el-impl", version: "1.0"
    compile group: "commons-dbcp", name: "commons-dbcp", version: "1.4"
    compile group: "org.yaml", name: "snakeyaml", version: "1.18"
    // compile group: "io.limberest", name: "limberest", version: "1.0.04"
    compile fileTree(dir: '../mdw/libs', include: '*.jar')
    
    
    // swagger
    compile group: "io.swagger", name: "swagger-annotations", version: "1.5.13"
    compile group: "io.swagger", name: "swagger-core", version: "1.5.13"
    compile group: "io.swagger", name: "swagger-models", version: "1.5.13"
    
    compile group: "com.fasterxml.jackson.core", name: "jackson-core", version: "2.4.5"
    compile group: "com.fasterxml.jackson.core", name: "jackson-annotations", version: "2.4.5"
    compile group: "com.fasterxml.jackson.core", name: "jackson-databind", version: "2.4.5"
    compile group: "com.fasterxml.jackson.dataformat", name: "jackson-dataformat-yaml", version: "2.4.5"
    compile group: "org.reflections", name: "reflections", version: "0.9.10"
    compile group: "org.javassist", name: "javassist", version: "3.18.1-GA"
    compile group: "org.apache.commons", name: "commons-lang3", version: "3.2.1"
    compile group: "com.google.guava", name: "guava", version: "18.0"
    
    // jsr-303 for swagger validations
    compile group: "javax.validation", name: "validation-api", version: "1.1.0.Final"

    // rabbitmq
    compile group: "com.rabbitmq", name: "amqp-client", version: "3.5.1"
    compile group: "org.springframework.amqp", name: "spring-amqp", version: "1.4.4.RELEASE"
    compile group: "org.springframework.amqp", name: "spring-rabbit", version: "1.4.4.RELEASE"
    compile group: "org.springframework.retry", name: "spring-retry", version: "1.0.2.RELEASE"

    // oauth
    compile group: "org.apache.oltu.oauth2", name: "org.apache.oltu.oauth2.common", version: "1.0.1"
    compile group: "org.apache.oltu.oauth2", name: "org.apache.oltu.oauth2.client", version: "1.0.1"
    compile group: "org.apache.oltu.oauth2", name: "org.apache.oltu.oauth2.resourceserver", version: "1.0.1"
    compile group: "org.apache.oltu.oauth2", name: "org.apache.oltu.oauth2.authzserver", version: "1.0.1"
    
    // doc store
    compile group: "org.mongodb", name: "mongodb-driver", version: "3.3.0"
    compile group: "org.mongodb", name: "mongodb-driver-core", version: "3.3.0"
    compile group: "org.mongodb", name: "bson", version: "3.3.0"
    
	// Java WebSocket Server
	compile group: "org.java-websocket", name: "Java-WebSocket", version: "1.3.0"
    
}

clean {
    dependsOn cleanJar
}

jar {
    // avoid confusingly including tomcat spring config(s)
    exclude "META-INF/mdw/spring/**"
    
    manifest {
        attributes("MDW-Version": mdwVersion)
        attributes("MDW-Build": new Date().format(mdwBuildTimeFormat))
    }
}

task cliJar(type: Jar) {
    destinationDir = file("../mdw/cli")
    archiveName = "mdw-cli.jar"
    manifest {
        attributes("MDW-Version": "${version}",
            "MDW-Build": new Date().format(mdwBuildTimeFormat),
            "Main-Class": "com.centurylink.mdw.cli.Main")
    }
    
    from("build/classes") {
        include "com/centurylink/mdw/cli/**/*.class"
    }
    
    from configurations.cli.asFileTree.files.collect {
        zipTree(it)
    }
}

task cliZip(type: Zip) {
    dependsOn cliJar
    destinationDir = file("../${mdwOutputDir}")
    archiveName = "mdw-cli-${version}.zip"
    from ("../mdw/cli") {
        exclude ".gitignore"
    }
}
    
archivesBaseName = "mdw-common"
artifacts {
    archives jar, javadocJar, sourcesJar
}

