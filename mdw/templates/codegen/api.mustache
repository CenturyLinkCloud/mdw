{{>licenseInfo}}
package {{#trimApiPaths}}{{importPath}}{{/trimApiPaths}}{{^trimApiPaths}}{{package}}{{/trimApiPaths}};

{{#imports}}
import {{import}};
{{/imports}}

{{#operations}}
@Path("{{baseName}}")
@Api("{{classname}}")
public class {{classname}} extends JsonRestService {
  {{#operation}}

  {{#isDeprecated}}
  @Deprecated
  {{/isDeprecated}}
  {{^path.empty}}@Path("{{{path}}}"){{/path.empty}}
  @ApiOperation(value="{{summary}}"{{#notes}},
      notes="{{notes}}"{{/notes}}{{#returnType}},
      response={{returnBaseType}}.class{{#returnContainer}}, responseContainer="{{returnContainer}}"{{/returnContainer}}{{/returnType}})
  {{#implicitParams}}{{#hasParams}}  @ApiImplicitParams({
  {{#allParams}}
      @ApiImplicitParam(name="{{{paramName}}}", paramType="{{example}}", dataType="{{{dataType}}}"{{#description}}, value="{{description}}"{{/description}}{{#required}}{{^squashApiPaths}}, required=true{{/squashApiPaths}}{{/required}}{{#required}}{{#squashApiPaths}}{{^isPathParam}}, required=true{{/isPathParam}}{{/squashApiPaths}}{{/required}}{{#defaultValue}}, defaultValue="{{defaultValue}}"{{/defaultValue}}),
  {{/allParams}}
  }){{/hasParams}}{{/implicitParams}}
  public JSONObject {{operationId}}(String path, {{#nickname}}JSONObject content, {{/nickname}}Map<String,String> headers) throws ServiceException {
    {{#validateRequest}}
    try {
      SwaggerModelValidator validator = new SwaggerModelValidator(headers.get("HttpMethod"), path);
      validator.validate(path, getQuery(path, headers), {{#nickname}}content{{/nickname}}{{^nickname}}null{{/nickname}}, headers);
    }
    catch (ValidationException ex) {
      throw new ServiceException(ex.getCode(), ex.getMessage());
    }
      
    {{/validateRequest}}
    {{#vendorExtensions.generatedFlow}}
    // invoke orchestration workflow process
    String requestId = generateRequestId();
    return invokeServiceProcess("{{vendorExtensions.generatedFlow}}", {{#bodyParam}}new {{{bodyParam.dataType}}}(content){{/bodyParam}}{{^bodyParam}}null{{/bodyParam}}, requestId, null, headers);
    {{/vendorExtensions.generatedFlow}}
    {{^vendorExtensions.generatedFlow}}
    {{#bodyParam}}
    {{{bodyParam.dataType}}} {{bodyParam.paramName}} = new {{{bodyParam.dataType}}}(content);
    {{/bodyParam}}
    {{#isRestfulCreate}}
    {{#hasBodyParam}}
    return {{bodyParam.paramName}}.getJson();
    {{/hasBodyParam}}
    {{^hasBodyParam}}
    return new JSONObject();
    {{/hasBodyParam}}
    {{/isRestfulCreate}}
    {{^isRestfulCreate}}
    {{#isListContainer}}
    JsonList<{{returnBaseType}}> jsonList = new JsonList<>(new ArrayList<{{returnBaseType}}>(), "{{baseName}}");
    return jsonList.toJson();
    {{/isListContainer}}
    {{#isMapContainer}}
    return new JSONObject();
    {{/isMapContainer}}
    {{^returnContainer}}
    {{#returnBaseType}}
    return new {{returnBaseType}}().getJson();
    {{/returnBaseType}}
    {{^returnBaseType}}
    return new JSONObject();
    {{/returnBaseType}}
    {{/returnContainer}}
    {{/isRestfulCreate}}
    {{/vendorExtensions.generatedFlow}}
  }
  {{/operation}}
}
{{/operations}}
