dependencies {
    compile project(":com.centurylink.mdw.designer.core")
    compile project(":com.centurylink.mdw.reports")
    compile fileTree(dir: "lib", includes: ["*.jar"])
    compile fileTree(dir: "${eclipseDir}/plugins", includes: ["**/*.jar"], excludes: ["**/*.source*.jar", "com.centurylink.mdw.*.jar"])
}

task cleanCompile(type: Delete) {
    delete sourceSets.main.output.classesDir
}

task cleanFeature(type: Delete) {
    delete "updateSite/features/com.centurylink.mdw.designer.feature_${version}.jar"
}

clean {
    dependsOn(cleanCompile, cleanJar)
}

task copyTaskConfig(type: Copy) {
    from "../mdw-taskmgr/src/META-INF/mdw"
    include "MDWTaskActions.xml"
    include "MDWTaskView.xml"
    rename { String fileName ->
        fileName.replace("MDW", "")
    }
    into "templates/config"
}

task copyFacelets(type: Copy) {
    from "../mdw-hub/web/layout"
    include "layout.xhtml"
    include "header.xhtml"
    include "footer.xhtml"
    include "tabs.xhtml"
    
    // TODO: copy from mdw-hub when available
    from "../mdw-taskmgr/web/demo"
    include "samples.xhtml"
    
    into "templates/facelet"
}

task copyMdwDocs(type: Copy) {
    from "../mdw-hub/web"
    include "doc/**/*"
    include "javadoc/**/*"
    include "mbengdoc/**/*"
    exclude "**/.metadata"
    into "./help"
}

task copyMdwCerts(type: Copy) {
  from "../mdw-framework/deploy/certs"
  include "CenturyLinkQCA.jks"
  into "./resources"
}

task copyMdwAll {
    dependsOn(copyMdwDocs, copyTaskConfig, copyFacelets, copyMdwCerts)
}

task earBase(type: Jar) {
    archiveName = "earBase.jar"
    destinationDir = file(".")
    from "earBase"
}

jar {
    dependsOn (copyMdwAll, earBase)
    
    archiveName = "${project.name}_${version}.jar"
  
    from(".") {
        include "lib/*"
        include "templates/**/*"
        include "icons/**/*"
        include "resources/**/*"
        include "help/**/*"
        include "intro/**/*"
        include "plugin.xml"
        include "toc.xml"
        include "earBase.jar"
        include "about.ini"
        include "mdw_32.png"
        include "splash.png"
        exclude "bin/META-INF"
    }
    
    manifest {
        from "META-INF/MANIFEST.MF"
    }
}

task jarFeature(type: Jar) {
    dependsOn (jar)
    destinationDir = file("./updateSite/features")
    archiveName = "com.centurylink.mdw.designer.feature_${version}.jar"
    
    from "./updateSite/features"
    include "feature.xml"
}

task updateDesignerVersion(dependsOn: [':com.centurylink.mdw.designer.core:updateDesignerVersion',
    ':com.centurylink.mdw.reports:updateDesignerVersion']) << {
    File manifestFile = new File("./META-INF/MANIFEST.MF")
    ant.replaceregexp(file: manifestFile, match: "Bundle-Version:.*", replace: "Bundle-Version: ${version}", byline: true)
    ant.replaceregexp(file: manifestFile, match: "com.centurylink.mdw.designer.core;bundle-version=\".*\"", replace: "com.centurylink.mdw.designer.core;bundle-version=\"${version}\"", byline: true)
    ant.replaceregexp(file: manifestFile, match: "com.centurylink.mdw.reports;bundle-version=\".*\"", replace: "com.centurylink.mdw.reports;bundle-version=\"${version}\"", byline: true)
 
    File featureFile = new File("./updateSite/features/feature.xml")
    ant.replaceregexp(file: featureFile, match: "label=\"MDW Designer\" version=\".*\"", replace: "label=\"MDW Designer\" version=\"${version}\"", byline: true)
    ant.replaceregexp(file: featureFile, match: "id=\"com.centurylink.mdw.designer.core\" version=\".*\"", replace: "id=\"com.centurylink.mdw.designer.core\" version=\"${version}\"", byline: true)
    ant.replaceregexp(file: featureFile, match: "id=\"com.centurylink.mdw.reports\" version=\".*\"", replace: "id=\"com.centurylink.mdw.reports\" version=\"${version}\"", byline: true)
    ant.replaceregexp(file: featureFile, match: "id=\"com.centurylink.mdw.designer.ui\" version=\".*\"", replace: "id=\"com.centurylink.mdw.designer.ui\" version=\"${version}\"", byline: true)
    
    File siteFile = new File("./updateSite/site.xml")
    ant.replaceregexp(file: siteFile, match: "feature url=\"features/com.centurylink.mdw.designer.feature_.*.jar\" id=\"com.centurylink.mdw.designer.feature\" version=\".*\"", replace: "feature url=\"features/com.centurylink.mdw.designer.feature_${version}.jar\" id=\"com.centurylink.mdw.designer.feature\" version=\"${version}\"", byline: true)
}
