<%@ jet package="translated" imports="java.util.* com.centurylink.mdw.plugin.project.model.* com.centurylink.mdw.plugin.preferences.model.*"
        class="SourceProjectBuildXmlEmitter" %>
<% Map map = (Map) argument;
   WorkflowProject workflowProject = (WorkflowProject) map.get("model");
   MdwSettings mdwSettings = (MdwSettings) map.get("settings");%>
<%=workflowProject.getWebProjectName()%> Custom Task Manager WebApp:

This Custom Task Manager WebApp is a stub.  To obtain the full functionality provided by MDW Task Manager,
along with the prebuilt JSF components, follow the 

Check this Dynamic Web Project in Eclipse:
  - Make sure it's a part of your workflow EAR deployment (right click on project <%=workflowProject.getEarProjectName()%> > Properties > Deployment Assembly).
  - Make sure it has a dependency on your workflow source project (right click on project <%=workflowProject.getWebProjectName()%> > Properties > Java Build Path > Projects > <%=workflowProject.getSourceProjectName()%>).
  - Make sure is has the project facets of Dynamic Web Module 2.5 and JavaServer Faces 2.0 (right click on project <%=workflowProject.getWebProjectName()%> > Properties > Project Facets).

Copy (or create similar) the following structures from an existing MDW 5.x TaskManager webapp project:
  - src/**/*Manager.java (DetailManager, FilterManager, ListManager)
    (update your ApplicationProperties.xml file to add entries like these:
      <Property Name="detail.manager">mywfDetailManager</Property>
      <Property Name="list.manager">mywfListManager</Property>
      <Property Name="filter.manager">mywfFilterManager</Property>
  - web/css/*
  - web/demo/*
  - web/images/*
  - web/script/*
  - web/WEB-INF/*.taglib.xml (rename to something appropriate for your workflow)
    (update your tablib.xml file to use a namespace appropriate for your workflow)
  - web/WEB-INF/web.xml
    (update your web.xml to have a suitable webapp id, and display name, and to reference your renamed taglib.xml file)
  - web/WEB-INF/mdw-tm.xml
  - web/WEB-INF/faces-config.xml
    (update your faces-config.xml comments, and also the managed bean names to match your mywfDetailManager, etc)
  - web/WEB-INF/lib/*
  - web/facelets/admin/*, 
    web/facelets/authentication/*,
    web/facelets/events/*,
    web/facelets/layout/*
    web/facelets/menus/*
    web/facelets/process/*
    web/facelets/reports/*
    web/facelets/tasks/*
    (update all your xhtml files to substitute your jsf namespace prefix and url from your taglib.xml file)
    (update all your xhtml files to reference your menus via the appropriate namespace prefix:
      example :    <ui:define name="detailLinks">
                     <other:taskNav />   <!-- change to be my:taskNav -->
                   </ui:define>)
    (update all your xhtml files to reference your managed beans:
      example:   #{otherDetailManager... becomes #{mywfDetailManager...)
  
Customize to add and delete tabs, menu links, lists, etc as described under 
Eclipse Help Contents > MDW Designer Help > Task Manager > Task Manager Development

Refer to the demo/samples.xhtml facelet file for examples of adding ajax-enabled RichFaces widgets to your pages.

Note: The most up-to-date version of this README can be found here:
https://github.com/CenturyLinkCloud/mdw/Environment/Creating%20a%20Custom%20TaskManager%20WebApp.txt