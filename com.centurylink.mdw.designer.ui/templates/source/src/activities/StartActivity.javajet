<%@ jet package="translated" imports="java.util.* com.centurylink.mdw.plugin.preferences.model.* com.centurylink.mdw.plugin.codegen.meta.*"
        class="StartActivityJavaEmitter" %>
<% Map map = (Map) argument;
   Activity activity = (Activity) map.get("model");
   MdwSettings mdwSettings = (MdwSettings) map.get("settings");%>
<%=mdwSettings.getCopyrightNotice()%>

package <%=activity.getJavaPackage()%>;

import com.centurylink.mdw.util.log.StandardLogger.LogLevel;
import com.centurylink.mdw.util.timer.Tracked;
import com.centurylink.mdw.java.JavaExecutionException;
import com.centurylink.mdw.activity.ActivityException;
import com.centurylink.mdw.model.request.Request;
import com.centurylink.mdw.model.workflow.ActivityRuntimeContext;
import com.centurylink.mdw.workflow.activity.DefaultActivityImpl;
import com.centurylink.mdw.workflow.activity.AbstractEvaluator;
import com.centurylink.mdw.activity.ActivityException;
import com.centurylink.mdw.model.workflow.ActivityRuntimeContext;
import com.centurylink.mdw.workflow.activity.process.ProcessStartActivity;

/**
 * MDW process start activity.
 */
@Tracked(LogLevel.TRACE)
public class <%=activity.getClassName()%> extends ProcessStartActivity {

    /**
     * Here is where the main processing for the activity is performed.
     *
     * @return the activity result (aka completion code)
     */
    @Override
    public Object execute(ActivityRuntimeContext runtimeContext) throws ActivityException {
      // TODO Auto-generated method stub
      return super.execute(runtimeContext);
    }
    
}
