<%@ jet package="translated" imports="java.util.* com.centurylink.mdw.plugin.preferences.model.* com.centurylink.mdw.plugin.codegen.meta.*"
        class="CamelNotifyHandlerJavaEmitter" %>
<% Map map = (Map) argument;
   EventHandler eventHandler = (EventHandler) map.get("model");
   MdwSettings mdwSettings = (MdwSettings) map.get("settings");%>
<%=mdwSettings.getCopyrightNotice()%>

package <%=eventHandler.getJavaPackage()%>;

import org.apache.camel.Message;

import com.centurylink.mdw.camel.MdwCamelException;
import com.centurylink.mdw.camel.event.DefaultNotifyHandler;

/**
 * Camel event notify handler for incoming requests.
 * See the MDW Camel Demo project for a complete working example. 
 */
public class <%=eventHandler.getClassName()%>  extends DefaultNotifyHandler
{
  @Override
  public String getRequestDocumentType(Message request) throws MdwCamelException
  {
    // default is StringDocument
    return super.getRequestDocumentType(request);
  }

  /**
   * Return your custom request document object
   */
  @Override
  public Object initializeRequestDocument(Message request) throws MdwCamelException
  {
    // default returns a string
    return super.initializeRequestDocument(request);
  }
  
  @Override
  public String getEventId(Message request)
  {
    // default is taken from request header value
    return super.getEventId(request);
  }

  @Override
  public String getResponse(int code, String message)
  {
    // default returns an MDW status message
    return super.getResponse(code, message);
  }
}
