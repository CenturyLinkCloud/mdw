<%@ jet package="translated" imports="java.util.* com.centurylink.mdw.plugin.preferences.model.* com.centurylink.mdw.plugin.codegen.meta.*"
        class="AdapterActivityJavaEmitter52" %>
<% Map map = (Map) argument;
   AdapterActivity adapterActivity = (AdapterActivity) map.get("model");
   MdwSettings mdwSettings = (MdwSettings) map.get("settings");%>
<%=mdwSettings.getCopyrightNotice()%>

package <%=adapterActivity.getJavaPackage()%>;

import com.qwest.mdw.connector.adapter.AdapterException;
import com.qwest.mdw.connector.adapter.ConnectionException;
import com.qwest.mdw.workflow.activity.ControlledActivityException;
import com.qwest.mdw.workflow.activity.impl.AdapterActivityBase;

/**
 * RESTful Web Service Adapter Activity.
 */
public class <%=adapterActivity.getClassName()%> extends AdapterActivityBase
{
  public boolean isSynchronous()
  {
    // TODO Auto-generated method stub
    return false;
  }

  protected Object openConnection() throws ConnectionException
  {
    // TODO Auto-generated method stub
    return null;
  }
  
  protected void closeConnection(Object connection)
  {
    // TODO Auto-generated method stub
    
  }
  

  /**
   * Override this method to build the request data.
   */
  @Override
  protected Object getRequestData() throws ControlledActivityException
  {
    // TODO Auto-generated method stub
    return "";
  }

  /**
   * Invokes the service. Override getRequestData() to provide the requestData value.
   */
  @Override
  public Object invoke(Object conn, Object requestData) throws AdapterException
  {
    // TODO Auto-generated method stub
    return null;
  }

  /**
   * Invoked by the runtime engine when the service has succeeded at the protocol level.
   * If there are business-related errors contained in the response, this method should 
   * set the result code accordingly.
   * 
   * @param response by default a String containing the HTTP response
   */
  @Override
  protected void handleAdapterSuccess(Object response) throws ControlledActivityException, AdapterException
  {
    // TODO Auto-generated method stub
  }

  /**
   * Invoked by the runtime engine when the service has failed at the protocol level.
   * A ControlledActivityException should be thrown to trigger the ERROR outcome.
   * 
   * @param errorCode the HTTP response code
   * @param errorCause exception which caused the failure
   */
  @Override
  protected void handleAdapterFailure(int errorCode, Throwable errorCause) throws ControlledActivityException
  {
    String message = "<%=adapterActivity.getLabel()%> Failed.";
    throw new ControlledActivityException(errorCode, message, errorCause);
  }
}
