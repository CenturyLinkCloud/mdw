apply plugin: "war"

configurations {
    wtpExclude 
}

eclipse {
    wtp {
        component {
            resource sourcePath: "/web", deployPath: "/"
            // TODO: this creates a duplicate entry (because "/src" needed instead of "src")
            resource sourcePath: "/src", deployPath: "/WEB-INF/classes"

            // exclude mdw-common, mdw-services and mdw-workflow (found from WEB-INF/classes)
            minusConfigurations << configurations.wtpExclude            
        }
        facet {
            facet type: "fixed", name: "jst.web"
            file.whenMerged {
                facets.find { it.type.name() == "installed" && it.name == "jst.web" }.version = "3.0"
            }
        }
    }
}
    
dependencies {
    
    compile project(":mdw-common")
    compile project(":mdw-services")
    compile project(":mdw-workflow")
    
    wtpExclude project(":mdw-common")
    wtpExclude project(":mdw-services")
    wtpExclude project(":mdw-workflow")

    providedCompile group: "javax.jms", name: "javax.jms-api", version: "2.0.1"
    
    providedCompile group: "javax.el", name: "el-api", version: "1.0"
    providedCompile group: "javax.servlet", name: "javax.servlet-api", version: "3.1.0"
    providedCompile group: "javax.validation", name: "validation-api", version: "1.1.0.Final"
    providedCompile group: "javax.servlet.jsp.jstl", name: "jstl-api", version: "1.2"
    providedCompile group: "junit", name: "junit", version: "4.8.1"
    providedCompile group: "ch.vorburger.mariaDB4j", name: "mariaDB4j-core", version: "2.2.1"
    
    compile group: "commons-beanutils", name: "commons-beanutils", version: "1.8.3"
    compile group: "commons-cli", name: "commons-cli", version: "1.0"
    compile group: "commons-codec", name: "commons-codec", version: "1.3"
    compile group: "commons-collections", name: "commons-collections", version: "3.2.2"
    compile group: "commons-digester", name: "commons-digester", version: "1.8.1"
    compile group: "commons-discovery", name: "commons-discovery", version: "0.4"
    compile group: "commons-el", name: "commons-el", version: "1.0"
    compile group: "commons-fileupload", name: "commons-fileupload", version: "1.2.1"
    compile group: "commons-httpclient", name: "commons-httpclient", version: "3.0.1"
    compile group: "commons-io", name: "commons-io", version: "2.4"
    compile group: "commons-lang", name: "commons-lang", version: "2.4"
    compile(group: "commons-validator", name: "commons-validator", version: "1.3.1") { exclude(module: "commons-digester") } 
    compile(group: "log4j", name: "log4j", version: "1.2.15") { exclude(module: "jmxtools"); exclude(module: "jmxri"); exclude(module: "jms") }
    compile group: "org.apache.xbean", name: "xbean-spring", version: "3.6"
    compile group: "el-impl", name: "el-impl", version: "1.0"
    
        
    // swagger
    compile group: "io.swagger", name: "swagger-servlet", version: "1.5.4"

    compile group: "mysql", name: "mysql-connector-java", version: "5.1.29"    
}

task mdwWarSourcesJar(type: Jar) {
    archiveName = "mdw-${mdwVersion}-sources.jar"
    
    from "src"
    from "../mdw-common/src"
    from "../mdw-services/src"
    from "../mdw-workflow/src"
    include "**/*.java"
}

sourcesJar {
    dependsOn mdwWarSourcesJar
}

task cleanDist(type: Delete) {
    delete "dist"
}

clean {
    dependsOn(cleanDist, cleanWar)
}

task buildDist(type: Exec) {
    if (System.properties["os.name"].startsWith("Windows"))
        commandLine 'cmd', '/c', 'grunt', '--no-color'
    else
        commandLine 'grunt', '--no-color'
}

// excludes JavaDocs by default
war {
    dependsOn(buildDist)
    
    archiveName = "mdw-${version}.war"

    manifest {
        attributes("MDW-Version": mdwVersion, "MDW-Build": new Date().format(mdwBuildTimeFormat))
    }
    
    from("src") {
        include "META-INF/mdw/**"
        include "META-INF/services/**" 
    }
    from("dist") {
        include "**/*"
    }
    from("../mdw-common/src") {
        include "META-INF/mdw/namespaces.map"
        include "META-INF/mdw/sql-queries.xml"
        include "META-INF/mdw/spring/*"
    }
    from("../mdw-workflow/src") {
        include "META-INF/mdw/**"
    }
    
    webXml = file("web/WEB-INF/web.xml")
    exclude "**/.*ignore";
    rootSpec.exclude "WEB-INF/web.xml"  // specified above
    rootSpec.exclude "javadoc/**" // hosted only in dev env
    
    rootSpec.exclude "**/.*ignore"
}

war {
    // dependsOn ":javadocs"  // build javadocs but do not include in war
    
    exclude "**/.*ignore";
    rootSpec.exclude "**/.*ignore"

    manifest {
        attributes("MDW-Version": mdwVersion)
        attributes("MDW-Build": new Date().format(mdwBuildTimeFormat))
    }
}