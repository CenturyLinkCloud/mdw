# JBOSS-EWS 1.0.2 Tomcat6 Configuration File

# Where JBoss EWS Tomcat installation lives
TOMADM_HOME="/foss/foss-ews/"
CLEARTRUST="/foss/appl/CT"
CATALINA_HOME="/foss/appl/jboss-ews/jboss-ews-1.0.2/tomcat6"
CATALINA_BASE="/foss/foss-ews/instances/mdwapp/current"
JASPER_HOME="${CATALINA_HOME}"
CATALINA_TMPDIR="${CATALINA_BASE}/temp"
JAVA_ENDORSED_DIRS="${CATALINA_HOME}/common/endorsed"


# Where your java installation lives

APP_NAME="-Dmdwapp"
JAVA_HOME="/usr/lib/jvm/java-1.6.0"
JRE_HOME="/usr/lib/jvm/java-1.6.0/jre"
JAVADIR="/usr/lib/jvm/java-1.6.0/bin"
jvmRoute=`uname -n | awk -F "." '{print $1}'`
JMX_PORT=9344

# Pass Parameters to JAVA using format:
# (JAVA_OPTS="${JAVA_OPTS} <parameters>"
# NOTE: Do not put all on one line with the exception of JVM Heap Sizes.
# This Section Developers need to include in FOSS RDD.


#JAVA_OPTS="${JAVA_OPTS} -Xminf0.1 -Xmaxf0.3"
#JAVA_OPTS="${JAVA_OPTS} -server -Xms256m -Xmx256m -Xns128m -XX:MaxPermSize=64m -XX:+PrintGCDetails -Xloggc:gclogs.txt"
#JAVA_OPTS="${JAVA_OPTS} -Djava.awt.headless=true"
JAVA_OPTS="${JAVA_OPTS} -server -Xms256m -Xmx512m -XX:MaxPermSize=128m -XX:+UseParallelGC -XX:+UseParallelOldGC -XX:+HeapDumpOnOutOfMemoryError -XX:HeapDumpPath=${CATALINA_BASE}/logs -XX:ErrorFile=${CATALINA_BASE}/logs/hs_err_pid%p.log -XX:+PrintGCDetails -Xloggc:${CATALINA_BASE}/logs/gclogs.log -Xdebug -Xrunjdwp:transport=dt_socket,server=y,suspend=n,address=9349"

# Pass Parameters for CATALINA_OPTS using format:
#CATALINA_OPTS="${CATALINA_OPTS} -D<parameters>"
# NOTE: Do not put all on one line
# This Section Developers need to include in FOSS RDD.

#CATALINA_OPTS="$CATALINA_OPTS -Djava.security.debug=all"
#CATALINA_OPTS="$CATALINA_OPTS -Djava.security.debug=access,failure"
CATALINA_OPTS="${CATALINA_OPTS} -Djava.security.auth.login.config==${CATALINA_BASE}/conf/jaas.config"
CATALINA_OPTS="${CATALINA_OPTS} -Djavax.net.ssl.trustStore=/foss/foss-ews/certs/QwestCA_DEV.keystore"
CATALINA_OPTS="${CATALINA_OPTS} -Djavax.net.ssl.trustStorePassword=changeit"
CATALINA_OPTS="${CATALINA_OPTS} -Denv=dev"
CATALINA_OPTS="${CATALINA_OPTS} -DruntimeEnv=foss"
CFG_DIR=$CATALINA_BASE/mdw/config
CATALINA_OPTS="${CATALINA_OPTS} -Dmdw.config.location=$CFG_DIR"
CATALINA_OPTS="${CATALINA_OPTS} -Dmdw.logger.impl=org.apache.log4j.Logger"
CATALINA_OPTS="${CATALINA_OPTS} -Dlog4j.configuration=file://$CFG_DIR/log4j.properties"
CATALINA_OPTS="${CATALINA_OPTS} -Djava.util.logging.config.file=$CFG_DIR/logging.properties"
CATALINA_OPTS="${CATALINA_OPTS} -Dcom.qwest.appsec.CTAPPFilterConfigFilePath=$CFG_DIR/CTAPPFilter.config"
CATALINA_OPTS="${CATALINA_OPTS} -Dcom.qwest.appsec.CTECOMFilterConfigFilePath=$CFG_DIR/CTECOMFilter.config"

# JMX Configuration COMMON for all
CATALINA_OPTS="${CATALINA_OPTS} -Dcom.sun.management.jmxremote"
CATALINA_OPTS="${CATALINA_OPTS} -Dcom.sun.management.jmxremote.port=9344"

# JMX Configuration with NO Authentication, NO SSL
# NOTE: Default for MDT, TEST & PROD Environments.
# PROD will require a  change, but for initial inventory of JON this should be the default.
CATALINA_OPTS="${CATALINA_OPTS} -Dcom.sun.management.jmxremote.ssl=false"
CATALINA_OPTS="${CATALINA_OPTS} -Dcom.sun.management.jmxremote.authenticate=false"

# JMX Configuration with Password Authentication, NO SSL
# NOTE: Using jmxremote.access & jmxremote.password in conf directory
#CATALINA_OPTS="${CATALINA_OPTS} -Dcom.sun.management.jmxremote.ssl=false"
#CATALINA_OPTS="${CATALINA_OPTS} -Dcom.sun.management.jmxremote.authenticate=true"
#CATALINA_OPTS="${CATALINA_OPTS} -Dcom.sun.management.jmxremote.access.file=${CATALINA_BASE}/conf/jmxremote.access"
#CATALINA_OPTS="${CATALINA_OPTS} -Dcom.sun.management.jmxremote.password.file=${CATALINA_BASE}/conf/jmxremote.password"

# JMX Configuration with Password Authentication and SSL
# NOTE: Using jmxremote.access & jmxremote.password in conf directory
#CATALINA_OPTS="${CATALINA_OPTS} -Dcom.sun.management.jmxremote.ssl=true"
#CATALINA_OPTS="${CATALINA_OPTS} -Dcom.sun.management.jmxremote.authenticate=true"
#CATALINA_OPTS="${CATALINA_OPTS} -Dcom.sun.management.jmxremote.access.file=${CATALINA_BASE}/conf/jmxremote.access"
#CATALINA_OPTS="${CATALINA_OPTS} -Dcom.sun.management.jmxremote.password.file=${CATALINA_BASE}/conf/jmxremote.password"
#CATALINA_OPTS="${CATALINA_OPTS} -Djavax.net.ssl.keyStore=/foss/foss-ews/certs/jmxServer.keystore"
#CATALINA_OPTS="${CATALINA_OPTS} -Djavax.net.ssl.keyStorePassword=fossjmx"

# JMX Configuration with ClearTrust JAAS Realm Authentication and SSL
# NOTE:  Uses jmxremote.access with respective LDAP Group entry.
#CATALINA_OPTS="${CATALINA_OPTS} -Dcom.sun.management.jmxremote.ssl=true"
#CATALINA_OPTS="${CATALINA_OPTS} -Dcom.sun.management.jmxremote.authenticate=true"
#CATALINA_OPTS="${CATALINA_OPTS} -Dcom.sun.management.jmxremote.login.config=cleartrust_login"
#CATALINA_OPTS="${CATALINA_OPTS} -Dcom.sun.management.jmxremote.access.file=${CATALINA_BASE}/conf/jmxremote.access"
#CATALINA_OPTS="${CATALINA_OPTS} -Djavax.net.ssl.keyStore=/foss/foss-ews/certs/jmxServer.keystore"
#CATALINA_OPTS="${CATALINA_OPTS} -Djavax.net.ssl.keyStorePassword=fossjmx"

# Setup local server jars in CLASSPATH
CLASSPATH=""
for i in ${CLEARTRUST}/ct_realm/lib/*
do
   CLASSPATH=${CLASSPATH}:${i}
done
export CLASSPATH

export CATALINA_HOME CATALINA_BASE JASPER_HOME CATALINA_TMPDIR JAVA_ENDORSED_DIRS
# What user should run tomcat
TOMCAT_USER="mdwapp"
#TOMCAT_USER="tomcat"

# You can change your tomcat locale here
#LANG=en_US

# Time to wait in seconds, before killing process
SHUTDOWN_WAIT=30

# Set the TOMCAT_PID location
CATALINA_PID=${CATALINA_BASE}/logs/mdwapp.pid

# If you wish to further customize your tomcat environment,
# put your own definitions here
# (i.e. LD_LIBRARY_PATH for some jdbc drivers)
# Just do not forget to export them :)
# This Section Developers need to include in FOSS RDD.
LD_LIBRARY_PATH=$LD_LIBRARY_PATH:$CATALINA_HOME/lib
export LD_LIBRARY_PATH
